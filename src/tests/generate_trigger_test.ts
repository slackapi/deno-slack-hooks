import { generateTriggerFile } from "../generate_trigger.ts";
import { assertSpyCall, stub } from "../dev_deps.ts";

Deno.test("generateTriggerFile", async (t) => {
  const writeTextFileStub = stub(Deno, "writeTextFile");

  await t.step("creates a valid TS file", async () => {
    const input: string[] = [`--source={ "triggers": \
    [{ "type": "shortcut", \
    "name": "test trigger", \
    "description": "Testing file generation", \
    "workflow": {"callback_id": "test_trigger"}, \
    "relative_filepath": "triggers/test_trigger.ts",
     "inputs":{ \
      "interaction": {"value":"{{data.interactivity}}"}
      } 
    }]}`];

    await generateTriggerFile(input);

    // Assert file created
    assertSpyCall(writeTextFileStub, 0, {
      args: ["triggers/test_trigger.ts", validOutputOne],
    });
  });

  await t.step(
    "creates multiple files when multiple trigger definitions are passed in",
    async () => {
      const input: string[] = [`--source={ "triggers": \
    [ \
      {
        "type": "shortcut", \
        "name": "test trigger", \
        "description": "Testing file generation", \
        "workflow": {"callback_id": "test_trigger"}, \
        "relative_filepath": "triggers/test_trigger.ts", \
        "inputs":{ \
          "interaction": {"value":"{{data.interactivity}}"}
          }
      }, \
      {
        "type": "shortcut", \
        "name": "reverse 123", \
        "workflow": {"callback_id": "reverse_123"}, \
        "relative_filepath": "reverse_123.ts" \
      } \
  ]}`];

      await generateTriggerFile(input);

      // Assert files created
      assertSpyCall(writeTextFileStub, 1, {
        args: ["triggers/test_trigger.ts", validOutputOne],
      });
      assertSpyCall(writeTextFileStub, 2, {
        args: ["reverse_123.ts", validOutputTwo],
      });
    },
  );

  writeTextFileStub.restore();
});

const date: string = (new Date()).toDateString();

const validOutputOne = `/** This file was autogenerated on ${date}. **/
import { Trigger } from "https://deno.land/x/deno_slack_api@1.2.0/types.ts";

/**
* Triggers determine when Workflows are executed. A trigger
* file describes a scenario in which a workflow should be run,
* such as a user pressing a button or when a specific event occurs.
* https://api.slack.com/future/triggers
*/
const testTriggerTrigger: Trigger = {
  type: "shortcut",
  name: "test trigger",
  description: "Testing file generation",
  workflow: "#/workflows/test_trigger",
  inputs: {
  interaction: {
    value: "{{data.interactivity}}",
  },
},
};

export default testTriggerTrigger;
`;

const validOutputTwo = `/** This file was autogenerated on ${date}. **/
import { Trigger } from "https://deno.land/x/deno_slack_api@1.2.0/types.ts";

/**
* Triggers determine when Workflows are executed. A trigger
* file describes a scenario in which a workflow should be run,
* such as a user pressing a button or when a specific event occurs.
* https://api.slack.com/future/triggers
*/
const reverse123Trigger: Trigger = {
  type: "shortcut",
  name: "reverse 123",
  description: "",
  workflow: "#/workflows/reverse_123",
  inputs: {},
};

export default reverse123Trigger;
`;
